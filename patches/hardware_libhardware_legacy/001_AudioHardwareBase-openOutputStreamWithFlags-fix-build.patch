From 523299a5d3f882f9976a4530d746d4afe2182d38 Mon Sep 17 00:00:00 2001
From: Thomas Lehner <thomas.lehner@justremotephone.com>
Date: Fri, 28 Nov 2014 20:08:41 +0100
Subject: [PATCH] AudioHardwareBase:openOutputStreamWithFlags: fix build

Fix build for default implementation of
AudioHardwareBase:openOutputStreamWithFlags

Change-Id: Iac282b3f282af89845e98bd1d0a1b502df27e55d
---
 audio/AudioHardwareInterface.cpp            | 2 +-
 include/hardware_legacy/AudioHardwareBase.h | 8 ++++++++
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/audio/AudioHardwareInterface.cpp b/audio/AudioHardwareInterface.cpp
index dbf6f33..7c48e5e 100644
--- a/audio/AudioHardwareInterface.cpp
+++ b/audio/AudioHardwareInterface.cpp
@@ -149,7 +149,7 @@ status_t AudioHardwareBase::dumpState(int fd, const Vector<String16>& args)
 }
 
 // default implementation calls its "without flags" counterpart
-AudioStreamOut* AudioHardwareInterface::openOutputStreamWithFlags(uint32_t devices,
+AudioStreamOut* AudioHardwareBase::openOutputStreamWithFlags(uint32_t devices,
                                           audio_output_flags_t flags,
                                           int *format,
                                           uint32_t *channels,
diff --git a/include/hardware_legacy/AudioHardwareBase.h b/include/hardware_legacy/AudioHardwareBase.h
index eac40dc..986bb96 100644
--- a/include/hardware_legacy/AudioHardwareBase.h
+++ b/include/hardware_legacy/AudioHardwareBase.h
@@ -51,6 +51,14 @@ class AudioHardwareBase : public AudioHardwareInterface
     /**This method dumps the state of the audio hardware */
     virtual status_t dumpState(int fd, const Vector<String16>& args);
 
+    virtual AudioStreamOut* openOutputStreamWithFlags(
+                                uint32_t devices,
+                                audio_output_flags_t flags=(audio_output_flags_t)0,
+                                int *format=0,
+                                uint32_t *channels=0,
+                                uint32_t *sampleRate=0,
+                                status_t *status=0);
+
 protected:
     /** returns true if the given mode maps to a telephony or VoIP call is in progress */
     virtual bool     isModeInCall(int mode)

